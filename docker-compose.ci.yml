version: '2.4'

## Port Assignments:
##  See .env file

## Container debugging: 
# 1. append the following lines to desired container 
# 2. boot up the container using `docker-compose up -d`
# 3 run `docker exec -it <container-name> bash` to start interactive shell
# 
#    tty: true
#    stdin_open: true
#    entrypoint: bash

services:
  ###
  # nginx reverse proxy
  # - Not currently used in CI
  ###
  

  ###
  # OpenCR
  ###
  opencr:
    container_name: opencr
    hostname: opencr
    image: intrahealth/opencr:latest
    restart: unless-stopped
    environment:
      - NODE_ENV=docker
      - HAPI_FHIR_URL=http://opencr-fhir:8080/fhir/metadata
    networks:
      - hie
    volumes:
      - ./configs/opencr/config_ci.json:/src/server/config/config_docker.json
      - ./configs/opencr/mediator_ci.json:/src/server/config/mediator.json
  opencr-fhir:
    image: hapiproject/hapi:latest
    container_name: opencr-fhir
    hostname: opencr-fhir
    restart: unless-stopped
    networks:
      - hie
    healthcheck:
      test: "curl -sS http://opencr-fhir:8080/fhir/metadata || exit 1"
      interval: 90s
      timeout: 30s
      retries: 3
    volumes:
      - cr-data:/data/hapi
  opencr-es:
    container_name: es
    image: intrahealth/elasticsearch:latest
    restart: unless-stopped
    environment:
      - node.name=es01
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es:/usr/share/elasticsearch/data
    networks:
      - hie

  ###
  # SHR
  ###
  shr:
    container_name: shr
    hostname: shr
    image: ghcr.io/i-tech-uw/shared-health-record:v0.1.2
    restart: unless-stopped
    environment:
      - NODE_ENV=docker
    networks:
      - hie
    volumes:
      - ./configs/shr/config_ci.json:/app/config/config_docker.json
      - ./configs/shr/mediator_ci.json:/app/config/mediator_docker.json
      - ./configs/openhim:/docker
      
    entrypoint:  ["./docker/ci-entrypoint.sh"]

  shr-fhir:
    image: hapiproject/hapi:latest
    container_name: shr-fhir
    hostname: shr-fhir
    restart: unless-stopped
    volumes:
      - shr-data:/data/hapi
    networks:
      - hie
    healthcheck:
      test: "curl -sS http://shr-fhir:8080/fhir/metadata || exit 1"
      interval: 30s
      timeout: 30s
      retries: 3

  ###
  # OpenHIM
  ###
  openhim-core:
    container_name: openhim-core
    hostname: openhim-core
    image: jembi/openhim-core:latest
    restart: unless-stopped
    environment:
      mongo_url: "mongodb://mongo-db/openhim"
      mongo_atnaUrl: "mongodb://mongo-db/openhim"
      NODE_ENV: "development"
    healthcheck:
      test: "curl -sSk https://openhim-core:8080/heartbeat || exit 1"
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - hie
    ports:
      - 8080:8080
      - "5000:5000"
      - "5001:5001"
      # - "5050:5050"
      # - "5051:5051"
      # - "5052:5052"
      # - "7788:7788"
  mongo-db:
    container_name: mongo-db
    image: mongo:3.4
    volumes:
      - "mongo-data:/data/db"
    restart: unless-stopped
    networks:
      - hie

  fhir-converter:
    container_name: fhir-converter
    hostname: fhir-converter
    restart: unless-stopped
    image: ghcr.io/b-techbw/openhim-mediator-fhir-converter:v3.0.1
    volumes:
      - ./configs/fhir-converter/config_ci.json:/app/config.json
    networks:
      - hie

  # Newman Tests
  newman:
    profiles: ["test"]
    image: postman/newman
    environment: 
      - $POSTMAN_COLLECTION
    volumes:
      - ./.postman:/.postman
    entrypoint: newman run $POSTMAN_COLLECTION -e /.postman/postman_env.ci.json --insecure --bail --timeout-request 10000
    networks:
      - hie
  # Not necessary
  openhim-console:
    profiles: ["ui"]
    image: jembi/openhim-console:latest
    restart: unless-stopped
    ports:
      - "80:80"
    healthcheck:
      test: "curl -sS http://localhost || exit 1"
      interval: 30s
      timeout: 30s
      retries: 3      
    networks:
      - hie
volumes:
  es:
    driver: local
  mongo-data:
    driver: local
  sqldata:
    driver: local
  shr-data:
    driver: local
  cr-data:
    driver: local
  nginx-data:
    driver: local
networks:
  hie:
