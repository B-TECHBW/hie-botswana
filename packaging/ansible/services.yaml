---
- name: systemd services
  hosts: all
  remote_user: "{{ user }}"
  become: true
  tags: prep

  vars_prompt:
    - name: "user"
      prompt: "Please enter the username (with sudo) -- NOT root user or it will fail"
      private: no
  
  vars:
    executable: "/bin/node"

  tasks:

# enable cpu and memory accounting by systemd
  - replace:
      path: /etc/systemd/system.conf
      regexp: '#DefaultMemoryAccounting=no'
      replace: 'DefaultMemoryAccounting=yes'
      backup: no

  - replace:
      path: /etc/systemd/system.conf
      regexp: '#DefaultCPUAccounting=no'
      replace: 'DefaultCPUAccounting=yes'
      backup: no


# postgres

  - name: Create a new database with name hapi
    postgresql_db:
      name: hapi


# need more here

  - name: Connect to hapi database, create hapi user, and grant access
    postgresql_user:
      db: hapi
      name: hapi
      password: "{{ pgpass }}"
      encrypted: yes
      priv: ALL







# elasticsearch
# this also increases memory for es, no need to do separately
  - name: systemctl elasticsearch builtin
    command: sudo systemctl enable --now elasticsearch
    register: es


  - debug:
      msg: "{{ es.stdout_lines }}"


# opencr

  # - name: install systemd template for opencr service (ubuntu)
  #   template:
  #     src: opencr.service.j2
  #     dest: /etc/systemd/system/opencr.service
  #     mode: 644
  #     force: yes
  #   vars:
  #     executable: "/usr/bin/npm"
  #   when: ansible_distribution == 'Ubuntu'


  - name: install systemd template for opencr service (centos)
    template:
      src: opencr.service.j2
      dest: /etc/systemd/system/opencr.service
      mode: 644
      force: yes
    vars:
      executable: "/usr/bin/node"
    when: ansible_distribution == 'CentOS'


  - name: run backend
    service: 
      name: opencr.service
      state: restarted
      enabled: yes
      daemon_reload: yes


