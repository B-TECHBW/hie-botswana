user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 1024;
}

# Platform Reverse Proxy
http {
    server_names_hash_bucket_size 64;
    
    #Custom Headers
    add_header Strict-Transport-Security max-age=15768000;

    #Compression
    gzip on;
    gzip_proxied any;
    gzip_types application/json application/fhir+json;
    gzip_vary on;

    #SSL
    ssl_certificate /run/secrets/fullchain.pem;
    ssl_certificate_key /run/secrets/privkey.pem;

    #http context Proxy config
    proxy_headers_hash_max_size 512;
    proxy_headers_hash_bucket_size 128;
    proxy_set_header    Host                $host;
    proxy_set_header    X-Forwarded-Host    $host;
    proxy_set_header    X-Forwarded-For     $remote_addr;
    proxy_set_header    X-Real-IP           $remote_addr;
    proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
    proxy_set_header    X-Forwarded-Proto   $scheme;

    proxy_read_timeout 99999;
    proxy_connect_timeout 99999;
    proxy_send_timeout 99999;

    # Prevent serving nginx version on error pages
    server_tokens off;

    server {
        listen 80;
        server_name domain_name;

        # Why are these repeated every block?
        location /.well-known/acme-challenge/ {
            resolver 127.0.0.11 valid=30s;
            set $upstream_certbot certbot;
            proxy_pass http://$upstream_certbot$request_uri;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443;
        server_name domain_name;

        location /.well-known/acme-challenge/ {
            resolver 127.0.0.11 valid=30s;
            set $upstream_certbot certbot;
            proxy_pass https://$upstream_certbot$request_uri;
        }
    }

    include /etc/nginx/conf.d/http-*.conf;
    include /etc/nginx/conf.d/package-conf-secure/http-*.conf;
}

stream {
    include /etc/nginx/conf.d/stream-*.conf;
}
