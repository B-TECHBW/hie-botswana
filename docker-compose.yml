version: '2.4'

## Port Assignments:
##  See .env file
services:
  ###
  # OpenCR
  ###
  opencr:
    container_name: opencr
    build: ./docker/opencr
    ports:
      - "${CR_PORT}:3000"
    depends_on:
      - opencr-fhir-server
      - opencr-es
    restart: on-failure
    environment:
      - NODE_ENV=docker
  opencr-fhir-server:
    build: ./docker/opencr-hapi
    container_name: hapi-fhir
    restart: unless-stopped
    ports:
      - "${CR_FHIR_PORT}:8080"
    cpus: .5
    mem_limit: 1GB
  opencr-es:
    container_name: es
    image: intrahealth/elasticsearch:latest
    environment:
      - node.name=es01
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
    ports:
      - "${CR_ES_PORT}:9200"

  ###
  # SHR
  ###
  shr:
    container_name: shr
    build:
      context: server
    ports:
      - "${SHR_PORT}:3000"
    restart: on-failure
    environment:
      - NODE_ENV=docker

  shr-fhir-server:
    image: "hapiproject/hapi:latest"
    container_name: shr-fhir-server
    restart: unless-stopped
    ports:
      - "${SHR_FHIR_PORT}:8080"
    volumes:
      - hapi-data:/data/hapi
      - ./docker/shr/hapi.properties:/conf/hapi/hapi.properties
    environment:
      JAVA_OPTS: '-Dhapi.properties=/conf/hapi/hapi.properties'
 
  ###
  # OpenMRS
  ###
  # openmrs-server:
  #   container_name: openmrs-server
  #   hostname: openmrs-server
  #   build: ./docker/openmrs-server
  #   restart: unless-stopped
  #   env_file:
  #       - ./openmrs/2.3.0-refapp-2.10.0/openmrs-server.env
  #   volumes:
  #     - ./openmrs/2.3.0-refapp-2.10.0/distribution:/openmrs/distribution
  #     - openmrs-data:/openmrs/data
  #   ports:
  #     - "${OPENMRS_PORT}:8080"

  openmrs-hapi-server:
    image: "hapiproject/hapi:latest"
    container_name: openmrs-hapi-server
    restart: unless-stopped
    volumes:
      - hapi-data:/data/hapi
      - ./docker/hapi/hapi.properties:/conf/hapi/hapi.properties
    environment:
      JAVA_OPTS: '-Dhapi.properties=/conf/hapi/hapi.properties'
    ports:
      - "${OPENMRS_HAPI_PORT}:8080"
  
###
# iSantePlus
###
  isanteplus:
    build: ./docker/isanteplus
    ports:
      - "${ISANTEPLUS_PORT}:8080"
    container_name: isanteplus
    volumes:
      - data03:/opt/isanteplus/data
    hostname: isanteplus
    restart: unless-stopped
  

  ###
  # OpenHIM
  ###
  openhim-core:
    container_name: openhim-core
    image: jembi/openhim-core:latest
    restart: unless-stopped
    environment:
      mongo_url: "mongodb://mongo-db/openhim-development"
      mongo_atnaUrl: "mongodb://mongo-db/openhim-development"
      NODE_ENV: "development"
    ports:
      - "${OPENHIM_PORT}:8080"
      - "5000:5000"
      - "5001:5001"
    healthcheck:
      test: "curl -sSk https://openhim-core:${OPENHIM_PORT}/heartbeat || exit 1"
      interval: 30s
      timeout: 30s
      retries: 3

  openhim-console:
    container_name: openhim-console
    image: jembi/openhim-console:latest
    restart: unless-stopped
    ports:
      - "${OPENHIM_CONSOLE_PORT}:80"
    volumes:
      - ./default.json:/usr/share/nginx/html/config/default.json
    healthcheck:
      test: "curl -sS http://openhim-console || exit 1"
      interval: 30s
      timeout: 30s
      retries: 3
  mongo-db:
    container_name: mongo-db
    image: mongo:4.0
    volumes:
      - "mongo-data:/data/db"
    restart: unless-stopped
volumes:
  data01:
    driver: local
  data02:
    driver: local
  data03:
    driver: local
  openmrs-data:
    driver: local
  mongo-data:
    driver: local
  shr:
    driver: local
  hapi-data:
    driver: local
