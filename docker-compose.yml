version: '3'

## Port Assignments:
##  See .env file
services:
  ###
  # OpenCR
  ###
  opencr:
    container_name: opencr
    image: intrahealth/opencr
    ports:
      - "${CR_PORT}:3000"
    depends_on:
      - opencr-fhir-server
      - opencr-es
    restart: on-failure
    environment:
      - NODE_ENV=cicd
  opencr-fhir-server:
    container_name: hapi-fhir
    image: hapiproject/hapi
    ports:
      - "${CR_FHIR_PORT}:8080"
  opencr-es:
    container_name: es
    image: intrahealth/elasticsearch:latest
    environment:
      - node.name=es01
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
    ports:
      - "${CR_ES_PORT}:9200"

  ###
  # SHR
  ###
  shr-fhir-server:
    build: ./docker/hapi
    container_name: shr-fhir-server
    restart: unless-stopped
    ports:
      - "${SHR_FHIR_PORT}:8080"
  shr-db:
    image: postgres
    container_name: shr-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: shr

  ###
  # OpenMRS
  ###
  openmrs-server:
    container_name: openmrs-server
    hostname: openmrs-server
    build: ./docker/openmrs-server
    depends_on:
      - openmrs-db
    env_file:
        - ./openmrs/2.3.0-refapp-2.10.0/openmrs-server.env
    volumes:
      - ./openmrs/2.3.0-refapp-2.10.0/distribution:/openmrs/distribution
      - openmrs-data:/openmrs/data
    ports:
      - "${OPENMRS_PORT}:8080"
  openmrs-db:
    container_name: openmrs-db
    image: mysql:5.7
    ports:
      - "${OPENMRS_DB_PORT}:3306"
    volumes:
      - data02:/var/lib/mysql
    hostname: openmrs-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_ROOT_USER: root
      MYSQL_DATABASE: openmrs
      MYSQL_USER: openmrs
      MYSQL_PASSWORD: openmrs
    command: ['mysqld', '--character-set-server=utf8', '--collation-server=utf8_unicode_ci']

  isanteplus:
    build: ./docker/tomcat
    ports:
      - "${ISANTEPLUS_PORT}:8080"
    container_name: isanteplus
    depends_on:
      - isanteplus-db
    volumes:
      - data03:/opt/isanteplus/data
    hostname: isanteplus
    restart: unless-stopped
  isanteplus-db:
    build: ./docker/mysql
    ports:
      - "${ISANTEPLUS_DB_PORT}:3306"
    container_name: isanteplus-db
    volumes:
      - data03:/opt/isanteplus/data
    hostname: isanteplus-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_ROOT_USER: root
      MYSQL_DATABASE: openmrs
      MYSQL_USER: openmrs
      MYSQL_PASSWORD: openmrs
    command: ['mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']

  ###
  # Flink Pipeline Runner
  ###
  flink-jobmanager:
    container_name: flink-jobmanager
    image: ${FLINK_DOCKER_IMAGE_NAME:-flink}
    expose:
      - "6123"
    ports:
      - "${FLINK_CONSOLE_PORT}:8081"
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager

  flink-taskmanager:
    container_name: flink-taskmanager
    image: ${FLINK_DOCKER_IMAGE_NAME:-flink}
    expose:
      - "6121"
      - "6122"
    depends_on:
      - flink-jobmanager
    command: taskmanager
    links:
      - "flink-jobmanager:flink-jobmanager"
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager

  ###
  # OpenHIM
  ###
  openhim-core:
    container_name: openhim-core
    image: jembi/openhim-core:latest
    restart: unless-stopped
    environment:
      mongo_url: "mongodb://mongo-db/openhim-development"
      mongo_atnaUrl: "mongodb://mongo-db/openhim-development"
      NODE_ENV: "development"
    ports:
      - "${OPENHIM_PORT}:8080"
      - "5000:5000"
      - "5001:5001"
    healthcheck:
      test: "curl -sSk https://openhim-core:${OPENHIM_PORT}/heartbeat || exit 1"
      interval: 30s
      timeout: 30s
      retries: 3

  openhim-console:
    container_name: openhim-console
    image: jembi/openhim-console:latest
    restart: unless-stopped
    ports:
      - "${OPENHIM_CONSOLE_PORT}:80"
    healthcheck:
      test: "curl -sS http://openhim-console || exit 1"
      interval: 30s
      timeout: 30s
      retries: 3
  mongo-db:
    container_name: mongo-db
    image: mongo:4.0
    volumes:
      - "mongo-data:/data/db"
    restart: unless-stopped

volumes:
  data01:
    driver: local
  data02:
    driver: local
  data03:
    driver: local
  openmrs-data:
    driver: local
  mongo-data:
    driver: local
  shr:
    driver: local

